------------
Action List:
------------
-test all possible functions in bst.c
-get rid of all print/flag statements
-test inserting duplicate values (not into bst(?)) but into rbt and gt
-improve maketest => test all ds's as much as you can 
-clean tokens (get rid of commas, etc.)
-submit to test2 dropbox
-submit to final submit
-test all trees
-ensure swapToLeaf() is swapping to the correct leaf. It should prefer predecessor [X]
-test trying to deleteBST/RBT/GT() a NULL value and see what happens...what should happen?
-check that swapper is not swapping entire structs and in RBT maintains color
-test all 3 DS's extensively
-fix make test/see if I already fixed make test
-go through all tests in the first eval and try them on your program

----------
Questions:
----------
-for deleteRBT(), when should i remove from tree? when it's 0, when it's about to be zero, when
	it's less than 0?
-does findBST() need to account for the value not being in the tree?
-is swapToLeaf() swapping to the correct leaf
-does deleteBST() need to account for empty tree or the value not being in the tree?
	-->so if the tree is empty, should is say value not found or print another messsage?
-any specific assertions needed?
-do we need to account for rotating in the RBT if one of the nodes to rotate is null?
-how should I handle the user requesting to delete a value not in the tree? Should I handle it at 	all?
-in RBT after deletionFixUp(), what value should I be pruning?
-in trees.c, check to see if empty files? how to handle if there are?
-in trees.c, should I print an error message if there are no cmd line args, or do something else?
-what's the difference between printing to stdout and stderr?

--------------
Helpful Notes:
--------------
-seg faults that may occur could be due to not checking if a given node exists. i.e. calling 
	getNodeR() when there is no nodeR
-BE CAREFUL, null pointers should count as red when looking at if (node is red) then...
